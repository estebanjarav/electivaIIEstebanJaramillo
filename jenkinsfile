pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_REGION            = 'us-east-1'
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {  
                    echo 'Success Clone repository'
                }
            }
        }

        stage('Building Test Environment') {
            steps {
                script {
                    if (fileExists('docker-compose.yml')) {
                        echo 'Success Build: docker-compose.yml exists'
                    } else {
                        error 'Build Failed: docker-compose.yml does not exist'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    if (fileExists('jest.config.js')) {
                        echo 'Success Build: jest.config.js exists'
                    } else {
                        error 'Test Fahiled: jeest.config.js does not exist'
                    }
                }
            }
        }

        stage('Terraform Init') {
            steps {
                dir('terraform') {
                    sh '''
                        terraform init \
                        -var="aws_access_key=$AWS_ACCESS_KEY_ID" \
                        -var="aws_secret_key=$AWS_SECRET_ACCESS_KEY" \
                        -var="aws_region=$AWS_REGION"
                    '''
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir('terraform') {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('terraform') {
                    sh '''
                        terraform plan -out=tfplan \
                        -var="aws_access_key=$AWS_ACCESS_KEY_ID" \
                        -var="aws_secret_key=$AWS_SECRET_ACCESS_KEY" \
                        -var="aws_region=$AWS_REGION"
                    '''
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('terraform') {
                    sh 'terraform apply -auto-approve tfplan'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}


